{"ast":null,"code":"var _jsxFileName = \"/home/luskay59/Desktop/architecture_logiciel/td_nodejs_morpion/src/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [gameId, setGameId] = useState(null);\n  useEffect(() => {\n    async function createNewGame() {\n      try {\n        const response = await fetch('http://localhost/api/games', {\n          method: 'POST'\n        });\n        const data = await response.json();\n        setGameId(data.id);\n      } catch (error) {\n        console.error('Error creating new game:', error);\n      }\n    }\n    createNewGame();\n  }, []);\n  async function handlePlay(nextSquares, cell) {\n    if (!gameId) return;\n    try {\n      const response = await fetch(`http://localhost/api/games/${gameId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          cell\n        })\n      });\n      const data = await response.json();\n      const {\n        state,\n        winner\n      } = data;\n      setSquares(state.flat());\n      setXIsNext(!xIsNext);\n      if (winner) {\n        if (winner === 'D') {\n          alert(\"Match nul !\");\n        } else {\n          alert(`Winner: ${winner}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error playing move:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: squares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"AuX4m7fQ8eTAKVnwOK+SA4P6yHo=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Board","jsxDEV","_jsxDEV","Game","_s","squares","setSquares","Array","fill","xIsNext","setXIsNext","gameId","setGameId","createNewGame","response","fetch","method","data","json","id","error","console","handlePlay","nextSquares","cell","headers","body","JSON","stringify","state","winner","flat","alert","className","children","onPlay","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/luskay59/Desktop/architecture_logiciel/td_nodejs_morpion/src/Game.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Board from './Board';\n\nexport default function Game() {\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [gameId, setGameId] = useState(null);\n\n  useEffect(() => {\n    async function createNewGame() {\n      try {\n        const response = await fetch('http://localhost/api/games', {\n          method: 'POST',\n        });\n        const data = await response.json();\n        setGameId(data.id);\n      } catch (error) {\n        console.error('Error creating new game:', error);\n      }\n    }\n    createNewGame();\n  }, []);\n\n  async function handlePlay(nextSquares, cell) {\n    if (!gameId) return;\n\n    try {\n      const response = await fetch(`http://localhost/api/games/${gameId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ cell }),\n      });\n\n      const data = await response.json();\n      const { state, winner } = data;\n\n      setSquares(state.flat());\n      setXIsNext(!xIsNext);\n\n      if (winner) {\n        if (winner === 'D') {\n          alert(\"Match nul !\");\n        } else {\n          alert(`Winner: ${winner}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error playing move:', error);\n    }\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={squares} onPlay={handlePlay} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC3D,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,eAAec,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDC,MAAM,EAAE;QACV,CAAC,CAAC;QACF,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,SAAS,CAACK,IAAI,CAACE,EAAE,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;IACAP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeS,UAAUA,CAACC,WAAW,EAAEC,IAAI,EAAE;IAC3C,IAAI,CAACb,MAAM,EAAE;IAEb,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8BJ,MAAM,EAAE,EAAE;QACnEK,MAAM,EAAE,KAAK;QACbS,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ;QAAK,CAAC;MAC/B,CAAC,CAAC;MAEF,MAAMP,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEW,KAAK;QAAEC;MAAO,CAAC,GAAGb,IAAI;MAE9BX,UAAU,CAACuB,KAAK,CAACE,IAAI,CAAC,CAAC,CAAC;MACxBrB,UAAU,CAAC,CAACD,OAAO,CAAC;MAEpB,IAAIqB,MAAM,EAAE;QACV,IAAIA,MAAM,KAAK,GAAG,EAAE;UAClBE,KAAK,CAAC,aAAa,CAAC;QACtB,CAAC,MAAM;UACLA,KAAK,CAAC,WAAWF,MAAM,EAAE,CAAC;QAC5B;MACF;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF;EAEA,oBACElB,OAAA;IAAK+B,SAAS,EAAC,MAAM;IAAAC,QAAA,eACnBhC,OAAA;MAAK+B,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBhC,OAAA,CAACF,KAAK;QAACS,OAAO,EAAEA,OAAQ;QAACJ,OAAO,EAAEA,OAAQ;QAAC8B,MAAM,EAAEb;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CAzDuBD,IAAI;AAAAqC,EAAA,GAAJrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}